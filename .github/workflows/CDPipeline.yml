name: CD Payment Service

on:
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up kubeconfig
        shell: powershell
        run: Set-Content -Path kubeconfig -Value $env:KUBECONFIG_CONTENT -Encoding Ascii
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
          KUBECONFIG: kubeconfig

      - name: Replace placeholders in payment-deployment.yaml
        shell: powershell
        run: |
          (Get-Content k8s/payment/payment-deployment.yaml) `
          -replace '\$\{\{ secrets\.DOCKERHUB_USERNAME \}\}', '${{ secrets.DOCKERHUB_USERNAME }}' `
          | ForEach-Object { $_ -replace '\$\{\{ github\.sha \}\}', '${{ github.sha }}' } `
          | Set-Content k8s/payment/payment-deployment.yaml
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          GITHUB_SHA: ${{ github.sha }}
          KUBECONFIG: kubeconfig
      
      - name: Create and apply Postgres Secret
        shell: powershell
        run: |
          Set-Content -Path kubeconfig -Value $env:KUBECONFIG_CONTENT -Encoding Ascii
          kubectl create secret generic postgres-secret `
            --from-literal=username=${{ secrets.POSTGRES_USERNAME }} `
            --from-literal=password=${{ secrets.POSTGRES_PASSWORD }} `
            --dry-run=client -o yaml --validate=false `
            | kubectl apply -f - --validate=false
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
          KUBECONFIG: kubeconfig

      - name: Deploy Postgres manifests
        shell: powershell
        run: kubectl apply -f k8s/postgres/ --validate=false
        env:
          KUBECONFIG: kubeconfig
          
      - name: Apply Kubernetes manifests
        shell: powershell
        run: kubectl apply -f k8s/payment/ --validate=false
        env:
          KUBECONFIG: kubeconfig

      - name: Restart Deployment
        shell: powershell
        run: kubectl rollout restart deployment payment-service
        env:
          KUBECONFIG: kubeconfig
